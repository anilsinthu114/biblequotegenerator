{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anils\\\\OneDrive\\\\Documents\\\\GitHub\\\\biblequotegenerator\\\\src\\\\components\\\\RandomVerseGenerator.js\",\n  _s = $RefreshSig$();\n// src/components/RandomVerseGenerator.js\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport verses from '../data/verses.json';\nimport VerseBox from './VerseBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  const arr = [...array];\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\nconst RandomVerseGenerator = ({\n  darkMode,\n  toggleDarkMode\n}) => {\n  _s();\n  const [shuffledVerses, setShuffledVerses] = useState([]);\n  const [verseIndex, setVerseIndex] = useState(0);\n  const [verse, setVerse] = useState('');\n  const [translatedVerse, setTranslatedVerse] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('favorites')) || []);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const synthRef = useRef(window.speechSynthesis);\n  const utteranceRef = useRef(null);\n  useEffect(() => {\n    const newVerses = shuffleArray(verses);\n    setShuffledVerses(newVerses);\n    setVerse(newVerses[0]);\n    setVerseIndex(1);\n  }, []);\n  useEffect(() => {\n    if (verse) translateVerse(getVerseText(verse));\n  }, [verse, language]);\n  const getVerseText = v => v.split(' - ')[0] || '';\n  const getReference = v => v.split(' - ')[1] || '';\n  const translateVerse = async text => {\n    if (language === 'en') {\n      setTranslatedVerse(text);\n      return;\n    }\n    try {\n      const res = await axios.post('https://translate.argosopentech.com/translate', {\n        q: text,\n        source: 'en',\n        target: language,\n        format: 'text'\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setTranslatedVerse(res.data.translatedText);\n    } catch (error) {\n      console.error('Translation error:', error);\n      setTranslatedVerse(text);\n    }\n  };\n  const generateNewVerse = () => {\n    stopSpeaking();\n    if (verseIndex >= shuffledVerses.length) {\n      const reshuffled = shuffleArray(verses);\n      setShuffledVerses(reshuffled);\n      setVerse(reshuffled[0]);\n      setVerseIndex(1);\n    } else {\n      setVerse(shuffledVerses[verseIndex]);\n      setVerseIndex(prev => prev + 1);\n    }\n  };\n  const addToFavorites = () => {\n    if (!verse || typeof verse !== 'string') return;\n    const isDuplicate = favorites.some(fav => fav.trim() === verse.trim());\n    if (isDuplicate) {\n      Swal.fire({\n        title: 'Already Saved!',\n        text: 'This verse is already in your favorites.',\n        icon: 'info',\n        timer: 1200,\n        showConfirmButton: false,\n        position: 'center',\n        customClass: {\n          popup: 'swal-popup',\n          title: 'swal-title',\n          content: 'swal-content'\n        }\n      });\n      return;\n    }\n    const updated = [...favorites, verse.trim()];\n    setFavorites(updated);\n    localStorage.setItem('favorites', JSON.stringify(updated));\n    Swal.fire({\n      title: 'Success!',\n      text: 'Verse added to favorites',\n      icon: 'success',\n      timer: 1500,\n      showConfirmButton: false,\n      position: 'center',\n      customClass: {\n        popup: 'swal-popup',\n        title: 'swal-title',\n        content: 'swal-content'\n      }\n    });\n  };\n  const speakVerse = () => {\n    stopSpeaking();\n    const utterance = new SpeechSynthesisUtterance(translatedVerse);\n    utterance.lang = language;\n    utterance.onend = () => setIsSpeaking(false);\n    synthRef.current.speak(utterance);\n    utteranceRef.current = utterance;\n    setIsSpeaking(true);\n  };\n  const stopSpeaking = () => {\n    synthRef.current.cancel();\n    setIsSpeaking(false);\n  };\n  const text = getVerseText(verse);\n  const reference = getReference(verse);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `d-flex justify-content-center align-items-center min-vh-100 ${darkMode ? 'bg-dark text-white' : 'bg-light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `verse-box p-5 rounded-4 shadow-lg text-center ${darkMode ? 'bg-secondary' : 'bg-white'}`,\n      style: {\n        maxWidth: '700px',\n        width: '90%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title mb-4\",\n        style: {\n          background: 'linear-gradient(to right, #00c6ff, #0072ff)',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent',\n          fontWeight: 'bold',\n          fontSize: '2.5rem'\n        },\n        children: \"Verse of Hope\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VerseBox, {\n        verse: text,\n        translatedVerse: translatedVerse,\n        reference: reference,\n        language: language,\n        onSpeak: speakVerse,\n        onStop: stopSpeaking,\n        isSpeaking: isSpeaking,\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center flex-wrap gap-4 mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"#00e6ff\",\n          onClick: addToFavorites,\n          \"aria-label\": \"Add to favorites\",\n          children: \"\\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: darkMode ? 'light' : 'dark',\n          onClick: toggleDarkMode,\n          style: {\n            color: darkMode ? '#000' : '#000',\n            backgroundColor: darkMode ? '#f8f9fa' : '#212529',\n            border: 'none',\n            borderRadius: '25px',\n            fontWeight: 'bold'\n          },\n          children: darkMode ? '☀️' : '🌙'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/favorites\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            children: \"View Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"px-4 py-2\",\n        variant: \"primary\",\n        onClick: generateNewVerse,\n        style: {\n          borderRadius: '25px',\n          fontWeight: 'bold',\n          background: 'linear-gradient(to right, #00c6ff, #0072ff)',\n          border: 'none'\n        },\n        children: \"Generate Verse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomVerseGenerator, \"lALnYxWwwTTQP6fxv9BRWLMSkCQ=\");\n_c = RandomVerseGenerator;\nexport default RandomVerseGenerator;\nvar _c;\n$RefreshReg$(_c, \"RandomVerseGenerator\");","map":{"version":3,"names":["axios","useEffect","useRef","useState","Button","Link","Swal","verses","VerseBox","jsxDEV","_jsxDEV","shuffleArray","array","arr","i","length","j","Math","floor","random","RandomVerseGenerator","darkMode","toggleDarkMode","_s","shuffledVerses","setShuffledVerses","verseIndex","setVerseIndex","verse","setVerse","translatedVerse","setTranslatedVerse","language","setLanguage","favorites","setFavorites","JSON","parse","localStorage","getItem","isSpeaking","setIsSpeaking","synthRef","window","speechSynthesis","utteranceRef","newVerses","translateVerse","getVerseText","v","split","getReference","text","res","post","q","source","target","format","headers","data","translatedText","error","console","generateNewVerse","stopSpeaking","reshuffled","prev","addToFavorites","isDuplicate","some","fav","trim","fire","title","icon","timer","showConfirmButton","position","customClass","popup","content","updated","setItem","stringify","speakVerse","utterance","SpeechSynthesisUtterance","lang","onend","current","speak","cancel","reference","className","children","style","maxWidth","width","background","WebkitBackgroundClip","WebkitTextFillColor","fontWeight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onSpeak","onStop","variant","onClick","color","backgroundColor","border","borderRadius","to","_c","$RefreshReg$"],"sources":["C:/Users/anils/OneDrive/Documents/GitHub/biblequotegenerator/src/components/RandomVerseGenerator.js"],"sourcesContent":["// src/components/RandomVerseGenerator.js\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport verses from '../data/verses.json';\nimport VerseBox from './VerseBox';\n\nconst shuffleArray = (array) => {\n  const arr = [...array];\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n\nconst RandomVerseGenerator = ({ darkMode, toggleDarkMode }) => {\n  const [shuffledVerses, setShuffledVerses] = useState([]);\n  const [verseIndex, setVerseIndex] = useState(0);\n  const [verse, setVerse] = useState('');\n  const [translatedVerse, setTranslatedVerse] = useState('');\n  const [language, setLanguage] = useState('en');\n  const [favorites, setFavorites] = useState(() => JSON.parse(localStorage.getItem('favorites')) || []);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const synthRef = useRef(window.speechSynthesis);\n  const utteranceRef = useRef(null);\n\n  useEffect(() => {\n    const newVerses = shuffleArray(verses);\n    setShuffledVerses(newVerses);\n    setVerse(newVerses[0]);\n    setVerseIndex(1);\n  }, []);\n\n  useEffect(() => {\n    if (verse) translateVerse(getVerseText(verse));\n  }, [verse, language]);\n\n  const getVerseText = (v) => v.split(' - ')[0] || '';\n  const getReference = (v) => v.split(' - ')[1] || '';\n\n  const translateVerse = async (text) => {\n    if (language === 'en') {\n      setTranslatedVerse(text);\n      return;\n    }\n    try {\n      const res = await axios.post('https://translate.argosopentech.com/translate', {\n        q: text,\n        source: 'en',\n        target: language,\n        format: 'text',\n      }, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      setTranslatedVerse(res.data.translatedText);\n    } catch (error) {\n      console.error('Translation error:', error);\n      setTranslatedVerse(text);\n    }\n  };\n\n  const generateNewVerse = () => {\n    stopSpeaking();\n    if (verseIndex >= shuffledVerses.length) {\n      const reshuffled = shuffleArray(verses);\n      setShuffledVerses(reshuffled);\n      setVerse(reshuffled[0]);\n      setVerseIndex(1);\n    } else {\n      setVerse(shuffledVerses[verseIndex]);\n      setVerseIndex((prev) => prev + 1);\n    }\n  };\n\n  const addToFavorites = () => {\n    if (!verse || typeof verse !== 'string') return;\n\n    const isDuplicate = favorites.some(fav => fav.trim() === verse.trim());\n    if (isDuplicate) {\n      Swal.fire({\n        title: 'Already Saved!',\n        text: 'This verse is already in your favorites.',\n        icon: 'info',\n        timer: 1200,\n        showConfirmButton: false,\n        position: 'center',\n        customClass: {\n          popup: 'swal-popup',\n          title: 'swal-title',\n          content: 'swal-content',\n        },\n      });\n      return;\n    }\n\n    const updated = [...favorites, verse.trim()];\n    setFavorites(updated);\n    localStorage.setItem('favorites', JSON.stringify(updated));\n\n    Swal.fire({\n      title: 'Success!',\n      text: 'Verse added to favorites',\n      icon: 'success',\n      timer: 1500,\n      showConfirmButton: false,\n      position: 'center',\n      customClass: {\n        popup: 'swal-popup',\n        title: 'swal-title',\n        content: 'swal-content',\n      },\n    });\n  };\n\n  const speakVerse = () => {\n    stopSpeaking();\n    const utterance = new SpeechSynthesisUtterance(translatedVerse);\n    utterance.lang = language;\n    utterance.onend = () => setIsSpeaking(false);\n    synthRef.current.speak(utterance);\n    utteranceRef.current = utterance;\n    setIsSpeaking(true);\n  };\n\n  const stopSpeaking = () => {\n    synthRef.current.cancel();\n    setIsSpeaking(false);\n  };\n\n  const text = getVerseText(verse);\n  const reference = getReference(verse);\n\n  return (\n    <div className={`d-flex justify-content-center align-items-center min-vh-100 ${darkMode ? 'bg-dark text-white' : 'bg-light'}`}>\n      <div className={`verse-box p-5 rounded-4 shadow-lg text-center ${darkMode ? 'bg-secondary' : 'bg-white'}`} style={{ maxWidth: '700px', width: '90%' }}>\n        <h1 className='title mb-4' style={{ background: 'linear-gradient(to right, #00c6ff, #0072ff)', WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent', fontWeight: 'bold', fontSize: '2.5rem' }}>\n          Verse of Hope\n        </h1>\n\n        <VerseBox\n          verse={text}\n          translatedVerse={translatedVerse}\n          reference={reference}\n          language={language}\n          onSpeak={speakVerse}\n          onStop={stopSpeaking}\n          isSpeaking={isSpeaking}\n          darkMode={darkMode}\n        />\n\n        <div className='d-flex justify-content-center flex-wrap gap-4 mb-5'>\n          <Button variant='#00e6ff' onClick={addToFavorites} aria-label='Add to favorites'>❤️</Button>\n          <Button\n            variant={darkMode ? 'light' : 'dark'}\n            onClick={toggleDarkMode}\n            style={{ color: darkMode ? '#000' : '#000', backgroundColor: darkMode ? '#f8f9fa' : '#212529', border: 'none', borderRadius: '25px', fontWeight: 'bold' }}\n          >\n            {darkMode ? '☀️' : '🌙'}\n          </Button>\n          <Link to='/favorites'>\n            <Button variant='success'>View Favorites</Button>\n          </Link>\n        </div>\n\n        <Button className='px-4 py-2' variant='primary' onClick={generateNewVerse} style={{ borderRadius: '25px', fontWeight: 'bold', background: 'linear-gradient(to right, #00c6ff, #0072ff)', border: 'none' }}>\n          Generate Verse\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomVerseGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}